plugins {
    id "com.jfrog.bintray" version "1.8.5"
    id 'java-library'
    id 'maven'
    id 'maven-publish'
}


def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "danielbustamante"
            name "Daniel Bustamante Ospina"
            email "daniel.bustamante@sofka.com.co"
        }
    }

    scm {
        url "git@github.com:reactive-commons/reactive-commons-java.git"
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId 'org.reactivecommons'
            artifactId 'async-commons-api'
            version project.property('version')
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Async Commons API')
                root.appendNode('name', 'async-commons-api')
                root.appendNode('url', 'http://reactivecommons.org')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['MyPublication']
    publish = true
    pkg {
        repo = 'maven-artifacts'
        userOrg = 'reactive-commons'
        name = 'reactive-commons'
        licenses = ['Apache-2.0']
        vcsUrl = 'git@github.com:reactive-commons/reactive-commons-java.git'
        version {
            name = project.property('version')
            desc = 'First version'
            released  = new Date()
            vcsTag = project.property('version')
        }
    }
}

dependencies {
    api project(":domain-events-api")
    compileOnly 'io.projectreactor:reactor-core'
    testImplementation 'io.projectreactor:reactor-test'
}
